services:
  vernemq:
    image: vernemq/vernemq:2.0.0-alpine
    container_name: vernemq
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - power_hub_simulation
    environment:
      DOCKER_VERNEMQ_ACCEPT_EULA: "yes"
      DOCKER_VERNEMQ_USER_power-hub: ${MQTT_PASSWORD}
      DOCKER_VERNEMQ_ALLOW_ANONYMOUS: "on"
      DOCKER_VERNEMQ_LISTENER__WS__DEFAULT: "0.0.0.0:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/health"]
      interval: 5s
      timeout: 5s
      retries: 5

  influxdb:
    image: influxdb
    container_name: influxdb
    restart: always
    ports:
      - "8086:8086"
    networks:
      - power_hub_simulation
    volumes:
      - influxdb-data:/var/lib/influxdb2
      - influxdb-config:/etc/influxdb2
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_USER}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_PASS}
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDB_ORGANISATION}
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDB_TELEGRAF_BUCKET}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDB_TOKEN}

  telegraf:
    image: telegraf
    container_name: telegraf
    restart: always
    volumes:
      - ./docker/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      vernemq:
        condition: service_healthy
      influxdb:
        condition: service_started
    networks:
      - power_hub_simulation
    env_file:
      - .env

  simulation:
    depends_on:
      vernemq:
        condition: service_healthy
      telegraf:
        condition: service_started
    container_name: simulation
    build:
      context: .
      dockerfile: python_script.Dockerfile
    command: "energy_box_control.simulation"
    networks:
      - power_hub_simulation
    env_file:
      - .env
    environment:
      - PAGERDUTY_SIMULATION_KEY=$PAGERDUTY_SIMULATION_KEY
    restart: on-failure:5

  control:
    depends_on:
      vernemq:
        condition: service_healthy
      telegraf:
        condition: service_started
    build:
      context: .
      dockerfile: python_script.Dockerfile
      args:
        POETRY_DEPS: "control"
    container_name: control
    command: "energy_box_control.power_hub_control"
    networks:
      - power_hub_simulation
    env_file:
      - .env
    environment:
      - PAGERDUTY_CONTROL_APP_KEY=$PAGERDUTY_CONTROL_APP_KEY
    restart: on-failure:5

  power_hub_api:
    depends_on:
      - influxdb
    container_name: power_hub_api
    ports:
      - "5001:5001"
    build:
      context: .
      dockerfile: python_script.Dockerfile
    command: "energy_box_control.api.api"
    networks:
      - power_hub_simulation
    env_file:
      - .env
    environment:
      - OPEN_WEATHER_API_KEY=$OPEN_WEATHER_API_KEY
    restart: on-failure:5

  mqtt_checker:
    depends_on:
      vernemq:
        condition: service_healthy
    container_name: mqtt_checker
    build:
      context: .
      dockerfile: python_script.Dockerfile
    command: "energy_box_control.monitoring.mqtt_checker"
    networks:
      - power_hub_simulation
    env_file:
      - .env
    environment:
      - PAGERDUTY_MQTT_CHECKER_KEY=$PAGERDUTY_MQTT_CHECKER_KEY
    restart: on-failure:5

  mqtt_bridge:
    image: mqtt_bridge
    container_name: mqtt_bridge
    build:
      context: mqtt_bridge

  hmi_dashboard:
    image: hmi_dashboard
    container_name: power_hub_dashboard
    build:
      context: hmi_dashboard
    ports:
      - 8180:80

networks:
  power_hub_simulation:

volumes:
  influxdb-data:
  influxdb-config:
