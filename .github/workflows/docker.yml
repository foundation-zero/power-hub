name: Docker build push workflow

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      gcp_project_id:
        required: true
        type: string
      gcp_workload_identity_provider:
        required: true
        type: string
      gcp_service_account:
        required: true
        type: string
    outputs:
      docker_image_tag:
        description: "Tag of the docker image built"
        value: ${{ jobs.merge-docker-images.outputs.docker_image_tag }}

jobs:
  build-push-docker:
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        application:
          - name: control
            build_args: POETRY_DEPS=control
          - name: api
          - name: mqtt_checker
            docker_file: mqtt_bridge/Dockerfile
            context: mqtt_bridge
        platform:
        - runner_os: ubuntu-latest
          name: linux/amd64
        - runner_os: ubuntu2-arm64
          platform: linux/arm64/v8

    env:
      PROJECT_ID: ${{inputs.gcp_project_id}}
      ENV: ${{inputs.env}}
      ZONE: europe-west1
      GAR: europe-west1-docker.pkg.dev
      REPO: power-hub

    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ${{matrix.platform.runner_os}}

    steps:

      - uses: actions/checkout@v4
      - name: Prepare
        run: |
          platform=${{matrix.platform.name}}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          image=${{env.GAR}}/${{env.PROJECT_ID}}/${{env.REPO}}/${{matrix.application.name}}
          echo "REGISTRY_IMAGE=$image" >> $GITHUB_ENV

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v2
        with:
          token_format: "access_token"
          workload_identity_provider: ${{inputs.gcp_workload_identity_provider}}
          service_account: ${{inputs.gcp_service_account}}
      - id: 'login-art-registry'
        name: 'Login to Artifact Registry'
        uses: docker/login-action@v3
        with:
          registry: ${{env.GAR}}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{env.REGISTRY_IMAGE}}
      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          file: ${{ matrix.application.docker_file || 'python_script.Dockerfile'}}
          platforms: ${{ matrix.platform.name }}
          tags: ${{env.REGISTRY_IMAGE}}
          build-args: ${{ matrix.application.build_args || ''}}
          context: ${{ matrix.application.context || '.'}}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{env.REGISTRY_IMAGE}},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.application.name }}-${{env.PLATFORM_PAIR}}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge-docker-images:
    timeout-minutes: 15
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    outputs:
      docker_image_tag:  ${{ steps.meta.outputs.version }}
    env:
      PROJECT_ID: ${{inputs.gcp_project_id}}
      ENV: ${{inputs.env}}
      ZONE: europe-west1
      GAR: europe-west1-docker.pkg.dev
      REPO: power-hub
    needs:
      - build-push-docker
    strategy:
      matrix:
        application: [ control, api, mqtt_checker]
    steps:
      - name: Prepare
        run: |
          image=${{env.GAR}}/${{env.PROJECT_ID}}/${{env.REPO}}/${{matrix.application}}
          echo "REGISTRY_IMAGE=$image" >> $GITHUB_ENV
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests/
          pattern: digests-${{ matrix.application }}-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v2
        with:
          token_format: "access_token"
          workload_identity_provider: ${{inputs.gcp_workload_identity_provider}}
          service_account: ${{inputs.gcp_service_account}}
      - id: 'login-art-registry'
        name: 'Login to Artifact Registry'
        uses: docker/login-action@v3
        with:
          registry: ${{env.GAR}}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=semver,pattern={{version}}
            type=sha

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)          

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
