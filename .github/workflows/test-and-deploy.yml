name: Test and deploy
on:
  push:
  release:
    types: [released]

jobs:
  test:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - run: pipx install poetry==1.7.1

      - run: poetry install
      
      - run: poetry check

      - name: Black
        run: poetry run black --check energy_box_control tests

      - name: Type check
        run: poetry run pyright

      - name: Test
        run: poetry run pytest

      - run: docker compose up -d control telegraf
        env:
          PAGERDUTY_CONTROL_APP_KEY: "-"

      - name: Integration tests
        run: poetry run pytest -s --runintegration tests/api/test_api_integration.py
        env:
          MQTT_HOST: "0.0.0.0"
          INFLUXDB_URL: "http://0.0.0.0:8086"
          API_TOKEN: "s4fczYTbDrf6ZFlvGHjOg5zFtJqbglZaJ5SOK7FCCdaoGhd6LVA87hHJjBoz2lC4"
          OPEN_WEATHER_API_KEY: ${{ secrets.OPEN_WEATHER_API_KEY }}
          PAGERDUTY_SIMULATION_KEY: "-"
      
      - name: Clear docker volumes
        run: docker compose down -v

      - run: docker compose up -d
        env:
          PAGERDUTY_SIMULATION_KEY: "-"
          PAGERDUTY_CONTROL_APP_KEY: "-"
  
      - name: Simulation integration tests
        run: poetry run pytest -s --runintegration tests/simulation/test_simulation_integration.py
        env:
          INFLUXDB_URL: "http://0.0.0.0:8086"
          API_TOKEN: "s4fczYTbDrf6ZFlvGHjOg5zFtJqbglZaJ5SOK7FCCdaoGhd6LVA87hHJjBoz2lC4"

      - name: MQTT Checker integration tests
        run: poetry run pytest -s --runintegration tests/monitoring/test_mqtt_checker_integration.py
        env:
          MQTT_HOST: "0.0.0.0"
          MQTT_PASSWORD: 'power-hub'
          MQTT_USERNAME: 'power-hub'
          PAGERDUTY_MQTT_CHECKER_KEY: "-"

  docker-build-push:
    uses: ./.github/workflows/docker.yml
    if: github.event_name == 'release' || (github.ref == 'refs/heads/main' && github.event_name == 'push')
    needs: test
    with:
      env: ${{  github.event_name == 'release' && 'prod' || 'staging' }}
      gcp_project_id:  ${{  github.event_name == 'release' && 'power-hub-prod' || 'power-hub-423312' }}
      gcp_workload_identity_provider: ${{vars.STAGING_WORKLOAD_IDENTITY_PROVIDER}}
      gcp_service_account: ${{vars.STAGING_SERVICE_ACCOUNT}}

  tofu-deploy:
    uses: ./.github/workflows/terraform.yml
    needs: docker-build-push
    concurrency:
      group: ${{ github.workflow }}-tofu
    secrets: inherit
    with:
      deploy: ${{ (github.event_name == 'release' || github.ref == 'refs/heads/main' && github.event_name == 'push' ) && true || false }}
      env: ${{  github.event_name == 'release' && 'prod' || 'staging' }}
      backend_config: ${{  github.event_name == 'release' && 'prod-backend.conf' || 'staging-backend.conf' }}
      gcp_project_id:   ${{  github.event_name == 'release' && 'power-hub-prod' || 'power-hub-423312' }}
      gcp_workload_identity_provider: ${{vars.STAGING_WORKLOAD_IDENTITY_PROVIDER}}
      gcp_service_account: ${{vars.STAGING_SERVICE_ACCOUNT}}
      influxdb_bucket: ${{  github.event_name == 'release' && 'power_hub' || 'simulation_data' }}
      image_tag: ${{ needs.docker-build-push.outputs.docker_image_tag }}

  tofu-test:
    uses: ./.github/workflows/terraform.yml
    needs: test
    concurrency:
      group: ${{ github.workflow }}-tofu
    secrets: inherit
    with:
      deploy: false
      env: 'staging'
      backend_config:  'staging-backend.conf'
      gcp_project_id:  'power-hub-423312'
      gcp_workload_identity_provider: ${{vars.STAGING_WORKLOAD_IDENTITY_PROVIDER}}
      gcp_service_account: ${{vars.STAGING_SERVICE_ACCOUNT}}
      influxdb_bucket: 'simulation_data'
      image_tag: 'unused-tag'
