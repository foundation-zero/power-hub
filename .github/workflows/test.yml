name: Test
on:
  push:

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - run: pipx install poetry==1.7.1

      - run: poetry install
      
      - run: poetry check

      - name: Black
        run: poetry run black --check energy_box_control tests

      - name: Type check
        run: poetry run pyright

      - name: Test
        run: poetry run pytest

      - name: Run simulation notebook
        run: poetry run jupyter nbconvert --execute --to html analysis/simulate_powerhub.ipynb

      - run: docker-compose up -d telegraf

      - name: Integration tests
        run: poetry run pytest -s --runintegration tests/test_api_integration.py
        env:
          MQTT_HOST: "0.0.0.0"
          INFLUXDB_URL: "http://0.0.0.0:8086"
          API_TOKEN: "s4fczYTbDrf6ZFlvGHjOg5zFtJqbglZaJ5SOK7FCCdaoGhd6LVA87hHJjBoz2lC4"
          OPEN_WEATHER_API_KEY: ${{ secrets.OPEN_WEATHER_API_KEY }}
      
      - name: Clear docker volumes
        run: docker-compose down -v

      - run: docker-compose up -d
  
      - name: Simulation integration tests
        run: poetry run pytest -s --runintegration tests/test_simulation_integration.py
        env:
          INFLUXDB_URL: "http://0.0.0.0:8086"
          API_TOKEN: "s4fczYTbDrf6ZFlvGHjOg5zFtJqbglZaJ5SOK7FCCdaoGhd6LVA87hHJjBoz2lC4"

  deploy:
    if: github.ref == 'refs/heads/main'
    concurrency:
      group: ${{ github.workflow }}-deploy
      cancel-in-progress: true
    
    env:
      PROJECT_ID: code-zero-zem
      SERVICE_ACCOUNT: power-hub@code-zero-zem.iam.gserviceaccount.com
      ZONE: europe-west1
      GAR: europe-west1-docker.pkg.dev
      REPO: power-hub

    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest

    steps:

      - id: 'checkout'
        name: 'Checkout'
        uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v1
        with:
          token_format: "access_token"
          workload_identity_provider: 'projects/395730360492/locations/global/workloadIdentityPools/power-hub/providers/power-hub-cloud-oidc-staging'
          service_account: ${{env.SERVICE_ACCOUNT}}

      - id: 'login-art-registry'
        name: 'Login to Artifact Registry'
        uses: docker/login-action@v2
        with:
          registry: ${{env.GAR}}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: 'Docker build'
        run: >
          docker build
          --tag "${{env.GAR}}/${{env.PROJECT_ID}}/${{env.REPO}}/python-app:${GITHUB_SHA}"
          --tag "${{env.GAR}}/${{env.PROJECT_ID}}/${{env.REPO}}/python-app:latest"
          . -f python_script.Dockerfile

      - name: 'Docker push sha'
        run: >
          docker push
          "${{env.GAR}}/${{env.PROJECT_ID}}/${{env.REPO}}/python-app:${GITHUB_SHA}"

      - name: 'Docker push latest'
        run: >
          docker push
          "${{env.GAR}}/${{env.PROJECT_ID}}/${{env.REPO}}/python-app:latest"
